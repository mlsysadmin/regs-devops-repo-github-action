name: OCI DevOps Build and Deployment

on:
  push:
    branches:
      - main

jobs:
  oci-devops:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up OCI CLI
      - name: Set up OCI CLI
        uses: oracle-actions/setup-oci-cli@v1
        with:
          tenancy-ocid: ${{ secrets.OCI_CLI_TENANCY }}
          user-ocid: ${{ secrets.OCI_CLI_USER }}
          compartment-ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}
          fingerprint: ${{ secrets.OCI_CLI_FINGERPRINT }}
          private-key: ${{ secrets.OCI_CLI_KEY_CONTENT }}  # PEM format private key
          region: ${{ secrets.OCI_CLI_REGION }}

      # Step 3: Trigger OCI DevOps Build Pipeline
      - name: Trigger OCI DevOps Build Pipeline
        id: build-pipeline
        run: |
          BUILD_RUN=$(oci devops build-run create-build-run \
            --build-pipeline-id ${{ secrets.BUILD_PIPELINE_OCID }} \
            --display-name "GitHub Action Build Run" \
            --commit-info "branchName=main,commitHash=${{ github.sha }}" \
            --query 'data.id' --raw-output)

          echo "Build run OCID: $BUILD_RUN"
          echo "::set-output name=build_run_ocid::$BUILD_RUN"

      # Step 4: Wait for the Build Pipeline to Complete
      - name: Wait for Build to Complete
        run: |
          oci devops build-run get --build-run-id ${{ steps.build-pipeline.outputs.build_run_ocid }} --wait-for-state SUCCEEDED

      # Step 5: Trigger OCI DevOps Deployment Pipeline
      - name: Trigger OCI DevOps Deployment Pipeline
        run: |
          oci devops deployment create-deployment \
            --pipeline-id ${{ secrets.DEPLOYMENT_PIPELINE_OCID }} \
            --deployment-type STAGE \
            --display-name "GitHub Action Deployment" \
            --wait-for-completion
